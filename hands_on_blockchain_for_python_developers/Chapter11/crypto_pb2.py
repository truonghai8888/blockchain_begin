# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: crypto.proto

import sys

_b = sys.version_info[0] < 3 and (lambda x: x) or (lambda x: x.encode("latin1"))
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pb2
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor.FileDescriptor(
    name="crypto.proto",
    package="crypto",
    serialized_pb=_b(
        '\n\x0c\x63rypto.proto\x12\x06\x63rypto"\x9f\x01\n\x0e\x43ryptoCurrency\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x14\n\x0ctotal_supply\x18\x02 \x01(\x05\x12\x36\n\x04type\x18\x03 \x02(\x0e\x32!.crypto.CryptoCurrency.CryptoType:\x05\x45RC20"1\n\nCryptoType\x12\x0b\n\x07\x42ITCOIN\x10\x00\x12\t\n\x05\x45RC20\x10\x01\x12\x0b\n\x07PRIVATE\x10\x02'
    ),
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)


_CRYPTOCURRENCY_CRYPTOTYPE = _descriptor.EnumDescriptor(
    name="CryptoType",
    full_name="crypto.CryptoCurrency.CryptoType",
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(name="BITCOIN", index=0, number=0, options=None, type=None),
        _descriptor.EnumValueDescriptor(name="ERC20", index=1, number=1, options=None, type=None),
        _descriptor.EnumValueDescriptor(name="PRIVATE", index=2, number=2, options=None, type=None),
    ],
    containing_type=None,
    options=None,
    serialized_start=135,
    serialized_end=184,
)
_sym_db.RegisterEnumDescriptor(_CRYPTOCURRENCY_CRYPTOTYPE)


_CRYPTOCURRENCY = _descriptor.Descriptor(
    name="CryptoCurrency",
    full_name="crypto.CryptoCurrency",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="name",
            full_name="crypto.CryptoCurrency.name",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=2,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
        ),
        _descriptor.FieldDescriptor(
            name="total_supply",
            full_name="crypto.CryptoCurrency.total_supply",
            index=1,
            number=2,
            type=5,
            cpp_type=1,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
        ),
        _descriptor.FieldDescriptor(
            name="type",
            full_name="crypto.CryptoCurrency.type",
            index=2,
            number=3,
            type=14,
            cpp_type=8,
            label=2,
            has_default_value=True,
            default_value=1,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            options=None,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[
        _CRYPTOCURRENCY_CRYPTOTYPE,
    ],
    options=None,
    is_extendable=False,
    extension_ranges=[],
    oneofs=[],
    serialized_start=25,
    serialized_end=184,
)

_CRYPTOCURRENCY.fields_by_name["type"].enum_type = _CRYPTOCURRENCY_CRYPTOTYPE
_CRYPTOCURRENCY_CRYPTOTYPE.containing_type = _CRYPTOCURRENCY
DESCRIPTOR.message_types_by_name["CryptoCurrency"] = _CRYPTOCURRENCY

CryptoCurrency = _reflection.GeneratedProtocolMessageType(
    "CryptoCurrency",
    (_message.Message,),
    dict(
        DESCRIPTOR=_CRYPTOCURRENCY,
        __module__="crypto_pb2"
        # @@protoc_insertion_point(class_scope:crypto.CryptoCurrency)
    ),
)
_sym_db.RegisterMessage(CryptoCurrency)


# @@protoc_insertion_point(module_scope)
